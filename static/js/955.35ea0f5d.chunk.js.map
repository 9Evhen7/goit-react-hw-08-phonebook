{"version":3,"file":"static/js/955.35ea0f5d.chunk.js","mappings":"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","sources":["components/ContactsList/contactItemStyles.js","components/Contacts/contactsStyles.js","redux/contacts/selectors.js","components/ContactsList/ContactItem.jsx","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx","components/Phonebook/phonebookStyles.js","components/Phonebook/Phonebook.jsx","styles/contactsPageStyles.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DeleteButton = styled.button`\n  border: none;\n  border-radius: 4px;\n  background-color: transparent;\n  color: white;\n  cursor: pointer;\n  &:hover {\n    scale: 1.1;\n  }\n`;\n","import styled from 'styled-components';\n\nconst Item = styled.li`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n  padding: 4px;\n  &:hover {\n    color: #000000;\n    background-color: rgb(239, 239, 239);\n    border-radius: 5px;\n\n    & button {\n      color: #e84a5f;\n    }\n  }\n`;\n\nconst List = styled.ul`\n  text-align: center;\n  padding: 0;\n  max-width: 100%;\n`;\n\nexport { List, Item };\n","export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.filter;\nexport const selectLoading = state => state.contacts.loading;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectAllContacts = state => state.contacts.items;\n","import { DeleteButton } from './contactItemStyles';\nimport { Item } from '../Contacts/contactsStyles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { getContacts, getFilter } from '../../redux/contacts/selectors';\n\nexport const ContactItem = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleRemoveContact = e => {\n    dispatch(deleteContact(e.currentTarget.id));\n  };\n\n  const contactsToRender =\n    filter !== ''\n      ? contacts.filter(contact => {\n          return contact.name.toLowerCase().includes(filter.toLowerCase());\n        })\n      : contacts;\n  console.log(contactsToRender);\n\n  return (\n    <>\n      {contactsToRender.length > 0 ? (\n        contactsToRender.map(({ id, name, number }) => {\n          return (\n            <Item key={id}>\n              <div>\n                {name}: {number}{' '}\n              </div>\n              <DeleteButton id={id} onClick={handleRemoveContact}>\n                Delete\n              </DeleteButton>\n            </Item>\n          );\n        })\n      ) : (\n        <p>No contacts</p>\n      )}\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { setFilterQuery } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilter = query => {\n    dispatch(setFilterQuery(query));\n  };\n\n  return (\n    <>\n      <p>Find contact by name</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter name\"\n        onChange={e => onFilter(e.target.value)}\n      />\n    </>\n  );\n};\n","import { ContactItem } from '../ContactsList/ContactItem';\nimport { Filter } from 'components/Filter/Filter';\nimport { List } from './contactsStyles';\nimport PropTypes from 'prop-types';\n\nexport const Contacts = () => {\n  return (\n    <List>\n      <Filter />\n      <ContactItem />\n    </List>\n  );\n};\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onClick: PropTypes.func,\n};\n","import { Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nconst AddUserForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 8px;\n  margin-bottom: 20px;\n`;\nconst Button = styled.button`\n  width: fit-content;\n  border-radius: 4px;\n  padding: 4px;\n  border: none;\n  &:hover {\n    background-color: #e84a5f;\n  }\n`;\nconst Label = styled.label`\n  width: 60%;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`;\nconst Input = styled(Field)`\n  margin-bottom: 10px;\n`;\n\nexport { AddUserForm, Button, Label, Input };\n","import { Formik } from 'formik';\nimport { AddUserForm, Button, Label, Input } from './phonebookStyles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const Phonebook = () => {\n  const dispatch = useDispatch();\n\n  const existingNames = useSelector(state => state.contacts.items).map(\n    contact => contact.name,\n  );\n\n  const handleSubmit = (values, actions) => {\n    if (existingNames.includes(values.name)) {\n      alert('Contact whith the same name already exist!');\n    } else {\n      dispatch(addContact(values));\n    }\n    actions.resetForm();\n  };\n\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n  return (\n    <>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <AddUserForm autoComplete=\"off\">\n          <Label htmlFor=\"name\">\n            <>Name</>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Evhen Melnicuk\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </Label>\n\n          <Label htmlFor=\"number\">\n            <>Number</>\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"777-21-09\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </Label>\n\n          <Button type=\"submit\">Add contact</Button>\n        </AddUserForm>\n      </Formik>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Thumb = styled.div`\n  width: 400px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { Phonebook } from 'components/Phonebook/Phonebook';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { Thumb } from 'styles/contactsPageStyles';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Thumb>\n      <Phonebook />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Contacts />\n    </Thumb>\n  );\n}\n"],"names":["DeleteButton","styled","Item","List","getContacts","state","contacts","items","getFilter","filter","selectLoading","loading","ContactItem","useSelector","dispatch","useDispatch","handleRemoveContact","e","deleteContact","currentTarget","id","contactsToRender","contact","name","toLowerCase","includes","console","log","length","map","number","onClick","Filter","type","placeholder","onChange","query","target","value","setFilterQuery","Contacts","AddUserForm","Form","Button","Label","Input","Field","Phonebook","existingNames","initialValues","onSubmit","values","actions","alert","addContact","resetForm","autoComplete","htmlFor","pattern","title","required","Thumb","Tasks","isLoading","useEffect","fetchContacts"],"sourceRoot":""}